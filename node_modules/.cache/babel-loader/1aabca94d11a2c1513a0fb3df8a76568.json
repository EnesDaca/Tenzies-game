{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT camp\\\\React\\\\tenzies-game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generateNewDie();\n    }));\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      className: \"roll-dice\",\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"YgqwSIDfuzqg6GTd1nJMCZRKU0o=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Die","nanoid","App","dice","setDice","allNewDice","tenzies","setTenzies","generateNewDie","value","Math","ceil","random","isHeld","id","newDice","i","push","rollDice","oldDice","map","die","holdDice","diceElements"],"sources":["C:/IT camp/React/tenzies-game/src/App.js"],"sourcesContent":["import React from \"react\"\nimport { useState } from \"react\"\nimport Die from \"./components/Die\"\nimport { nanoid } from 'nanoid'\n\n\nexport default function App() {\n \n    const [dice, setDice] = useState(allNewDice())\n    const [tenzies, setTenzies] = useState(false)\n\n    \n    \n        \n    function generateNewDie() {\n      return {\n          value: Math.ceil(Math.random() * 6),\n          isHeld: false,\n          id: nanoid()\n      }\n  }\n\n    function allNewDice(){\n      const newDice = []\n      for (let i = 0; i < 10; i++){\n        newDice.push(generateNewDie())\n      } \n      return newDice\n    }  \n\n    function rollDice () {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ?\n              die :\n              generateNewDie()\n      }))\n    }\n\n    function holdDice(id){\n      setDice(oldDice => oldDice.map(die => {\n        return  die.id === id ? \n            {...die, isHeld: !die.isHeld} :\n            die\n      }))\n    \n    }\n    \n    const diceElements = dice.map(die => (\n            <Die key={die.id} value={die.value} isHeld={die.isHeld} holdDice={() => holdDice(die.id)}/>\n            ))\n\n    return (\n        <main>\n          <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze \n            it at its current value between rolls.</p>\n          <div className=\"dice-container\">\n            {diceElements}\n          </div>\n          <button onClick={rollDice} className=\"roll-dice\">Roll</button>\n        </main>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACM,UAAU,EAAX,CAAhC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;EAKA,SAASS,cAAT,GAA0B;IACxB,OAAO;MACHC,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CADJ;MAEHC,MAAM,EAAE,KAFL;MAGHC,EAAE,EAAEb,MAAM;IAHP,CAAP;EAKH;;EAEC,SAASI,UAAT,GAAqB;IACnB,MAAMU,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;MAC1BD,OAAO,CAACE,IAAR,CAAaT,cAAc,EAA3B;IACD;;IACD,OAAOO,OAAP;EACD;;EAED,SAASG,QAAT,GAAqB;IACnBd,OAAO,CAACe,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYC,GAAG,IAAI;MACpC,OAAOA,GAAG,CAACR,MAAJ,GACDQ,GADC,GAEDb,cAAc,EAFpB;IAGD,CAJkB,CAAZ,CAAP;EAKD;;EAED,SAASc,QAAT,CAAkBR,EAAlB,EAAqB;IACnBV,OAAO,CAACe,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYC,GAAG,IAAI;MACpC,OAAQA,GAAG,CAACP,EAAJ,KAAWA,EAAX,GACJ,EAAC,GAAGO,GAAJ;QAASR,MAAM,EAAE,CAACQ,GAAG,CAACR;MAAtB,CADI,GAEJQ,GAFJ;IAGD,CAJkB,CAAZ,CAAP;EAMD;;EAED,MAAME,YAAY,GAAGpB,IAAI,CAACiB,GAAL,CAASC,GAAG,iBACzB,QAAC,GAAD;IAAkB,KAAK,EAAEA,GAAG,CAACZ,KAA7B;IAAoC,MAAM,EAAEY,GAAG,CAACR,MAAhD;IAAwD,QAAQ,EAAE,MAAMS,QAAQ,CAACD,GAAG,CAACP,EAAL;EAAhF,GAAUO,GAAG,CAACP,EAAd;IAAA;IAAA;IAAA;EAAA,QADa,CAArB;EAIA,oBACI;IAAA,wBACE;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEI;MAAG,SAAS,EAAC,cAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAIE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGS;IADH;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAQ,OAAO,EAAEL,QAAjB;MAA2B,SAAS,EAAC,WAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GAxDuBhB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}